@import "config";
@import "../../zcore/assets/scss/core.scss";


/////////////////////////////
// Preloader
/////////////////////////////
#preloader {
	position: fixed;
	top: 0;
	left: 0;
	right: 0;
	bottom: 0;
	z-index: 9999;
	background-color: 	#af86bd !important;
	transition: opacity 0.8s cubic-bezier(.77,0,.18,1);
	opacity: 0;
	&.loading{
		opacity: 1;
	}
	*.preloader, *.preloader:before, *.preloader:after {
		box-sizing: border-box;
		position: relative;
	}

	.loader {
		display: none;
		width: 100vw;
		height: 100vh;
	}

	.spinner {
		width: 66px; height: 66px;

		animation: contanim 2s linear infinite;
	}

	$color: rgba(255, 255, 255, 0.25), rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.75), rgba(255, 255, 255, 1);

	$d: 175.6449737548828;

	svg.preloader {
		display: block;

		margin: 0;
		padding: 0;

		width: 100%; height: 100%;

		left: 0; top: 0;
		position: absolute;

		transform: rotate(-90deg);

		@for $i from 1 through 2 {
			&:nth-child(#{$i}) circle {
				stroke: nth($color, $i);
				stroke-dasharray: 1, 300;
				stroke-dashoffset: 0;

				animation: strokeanim #{$i+1}s calc(.2s * (#{$i})) ease infinite;
				transform-origin: center center;
			}
		}
	}


	@keyframes strokeanim {
		0% {
	    stroke-dasharray: 1, 300;
	    stroke-dashoffset: 0;
	  }
	  50% {
	    stroke-dasharray: 120, 300;
	    stroke-dashoffset: -$d / 3;
	  }
	  100% {
	    stroke-dasharray: 120, 300;
	    stroke-dashoffset: -$d;
	  }
	}

	@keyframes contanim {
		100% {
			transform: rotate(360deg)
		}
	}
}



////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////


h1, h2, h3, h4, h5, h6{
	color: map-get($colors, primary);
}


h5, h6{
	font-weight: 400;
	letter-spacing: 0 !important;
}

h5, h6{
	text-transform: uppercase;
}

p{
	color: map-get($colors, 6);
}


.h-classic{
	height: 75vh;
}

.znav-white a:not(.btn) {
    color: map-get($colors, primary);
    text-transform: uppercase;
	font-weight: 800;
	letter-spacing: 0.05em;
}



.btn{
	letter-spacing: 2px !important;
	text-transform: uppercase !important;
	&.btn-lg{
		padding: map-get($spacers, 3) map-get($spacers, 5);
	}
	&[class*="btn-outline-"]{
		border-width: 2px !important;
		// padding: map-get($spacers, 2) map-get($spacers, 3);
		font-family: 'Raleway', sans-serif !important;
	}
	&.btn-link{
		color: map-get($colors, primary);
		font-size: modular-scale(0);
	}

}
.w{
	width: 18% !important;
}

.w-30{
	width: 30% !important;
}

.w-15{
	width: 15% !important;
}

.w-120{
	width: 120 !important;
}

.btn-down{
	padding: 0 map-get($spacers, 4);
	position: absolute;
	bottom: 0;
	left: 50%;
	transform: translateX(-50%);
	height: 60px;
	z-index: 1;

	&:after{
		content: "";
		position: absolute;
		height: 100%;
		width: 2px;
		background-color: white;
		transform: translateX(-50%);
		top: 0;
		left: 50%;
	}
}

hr{
	width: 4.20873rem;
	display: inline-block;
	margin-top: map-get($spacers, 1);
	color: rgba(map-get($colors, primary), 0.2);

}

/////////////////////////////
// Plyr
/////////////////////////////
.plyr__control--overlaid{
	&, &:hover, &:focus{
		background-color: map-get($colors, primary);
	}
}
.plyr--video .plyr__controls .plyr__control.plyr__tab-focus, .plyr--video .plyr__controls .plyr__control:hover, .plyr--video .plyr__controls .plyr__control[aria-expanded=true], .plyr__menu__container label.plyr__control input[type=radio]:checked+span{
	background-color: map-get($colors, primary);
}
.plyr--full-ui input[type=range]{
	color: map-get($colors, primary);
}


.plyr--video .plyr__controls {
    border-radius: 10px !important;
}


.flex-direction-nav{
	a[class*="flex-"]:before{
		content: " ";
		height: 15px;
		width: 15px;
		border-right: 2px solid black;
		border-top: 2px solid black;
		margin: 10px;
	}
	a.flex-next:before{
		transform: rotate(45deg);
	}
	a.flex-prev:before{
		transform: rotate(225deg);
	}
}

.flex-viewport{
	border-radius: 15px;
}


.owl-carousel .owl-stage-outer {
	margin-bottom: 20px;
}

.owl-carousel .owl-nav button.owl-next svg, .owl-carousel .owl-nav button.owl-prev svg{
    transform: translate3d(0px, 2px ,0px)
}

.owl-carousel .owl-stage-outer {
    margin-bottom: 0px;
}
//////////////////////////////////////////////
///////navigation
///////////////////////////////////////////////


@include mq($from: desktop){
	.absolute-lg-centered {
	    left: 50%;
	    top: 50%;
	    transform: translateX(-50%) translateY(-50%);
	}
}

.znav-container .has-dropdown .dropdown{
	min-width: 270px;
}

.znav-container ul.navbar-nav li.has-dropdown ul.dropdown.dropdown-align-right {
    left: auto;
		right: 0;
}

.znav-container .navbar a.navbar-brand{
	z-index: 2;
}

::placeholder {
	line-height: 1.4 !important;
}


.header {
    margin-top: 104.38px;
}

.header .h-full {
    min-height: calc(100vh - 104.38px) !important;
}

.sticky {
	position: sticky;
	top: 150px;
}

.border-radius-5 {
	border-radius: 5px;
}


.flex-control-nav {
    border-radius: 10px !important;
}

$font-stack-safe: Helvetica, sans-serif;
$font-stack-main: "Roboto", $font-stack-safe;
$font-stack-highlight: "Roboto Condensed", $font-stack-safe;

$color-background: rgb(26, 26, 26);
$color-highlight: rgb(175, 225, 250);
$color-highlight-light: lighten($color-highlight, 10%);
$color-highlight-dark: darken($color-highlight, 10%);

$color-foreground: invert($color-background);

$map-dot-size: 40px;

$transition-time: 0.25s;

html {
  background: $color-background;
  color: $color-foreground;
  text-align: center;
  font-family: $font-stack-main;
}

body {
  max-width: 1200px;
  margin: 20px auto;
  padding: 0 100px;
  overflow-x: hidden;
}

.description {
  max-width: 600px;
  margin: 0 auto;
  color: transparentize($color-foreground, 0.3);
}

div, img, footer {
  position: relative;
  box-sizing: border-box;
}

h1, h2, h3, h4, h5, h6 {
  margin-bottom: 20px;
  text-transform: uppercase;
  font-family: $font-stack-highlight;
  font-weight: 300;
}

h1 {
  font-size: 36pt;
}

h2 {
  font-size: 24pt;
}

h3 {
  font-size: 18pt;
}

h4 {
  font-size: 16pt;
}

h5 {
  font-size: 14pt;
}

h6 {
  font-size: 12pt;
}

p {
  font-size: 12pt;
  margin-bottom: 12pt;
}

strong {
  font-weight: 900;
  font-family: $font-stack-highlight;
  color: $color-foreground;
}

a {
  transition: color $transition-time ease-in-out;
  font-family: $font-stack-highlight;
  text-transform: uppercase;
  text-decoration: none;
  color: $color-highlight-light;
}

a:visited {
  color: $color-highlight-light;
}

li.active a, a:hover, a:active {
  color: $color-foreground;
}

.centered {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.centered-y {
  position: absolute;
  width: 100%;
  top: 50%;
  transform: translateY(-50%);
}

.distribution-map {
  position: relative;
  width: 100%;
  padding: 20px;
  box-sizing: border-box;
  margin: 0 auto;
}

.distribution-map > img {
  width: 100%;
  position: relative;
  margin: 0;
  padding: 0;
}

.map-point {
  cursor: pointer;
  outline: none;
  z-index: 0;
  position: absolute;
  width: $map-dot-size;
  height: $map-dot-size;
  border-radius: $map-dot-size / 2;
  opacity: 0.8;
  transform: translate(-50%, -50%);
  transition: opacity $transition-time ease-in-out $transition-time, width $transition-time ease-in-out $transition-time, height $transition-time ease-in-out $transition-time, z-index $transition-time ease-in-out $transition-time;
  background: transparentize($color-background, 0.15);
  border: $map-dot-size / 8 solid $color-highlight-dark;
}

.map-point .content {
  opacity: 0;
  transition: opacity $transition-time ease-in-out;
  width: 100%;
  height: 100%;
  left: 50%;
  transform: translateX(-50%);
  overflow: overlay;
}

.map-point:active, .map-point:focus {
  margin: 0;
  padding: 0;
  opacity: 1;
  width: 300px;
  height: 220px;
  color: $color-foreground;
  z-index: 1;
  transition: opacity $transition-time ease-in-out, width $transition-time ease-in-out, height $transition-time ease-in-out;
}

.map-point:active .content, .map-point:focus .content {
  opacity: 1;
  transition: opacity $transition-time ease-in-out $transition-time, height 0 ease-in-out $transition-time, overflow 0 ease-in-out $transition-time;
  overflow: hidden;
}

.map-point:active a:hover, .map-point:active a:active {
  color: $color-highlight;
}
